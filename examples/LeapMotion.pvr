<?xml version="1.0" encoding="UTF-8"?>
<Scene base_name="LeapMotion" name_space="Scene" name_suffix="0" persistency="666">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="0" persistency="666" pickable="0" type="Object" visible="1">
      <Object ambient="0.3 0.3 0.3 1" base_name="light" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" photometricMap="" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowMapRes="2048" shadowVolume="1e+06 1e+06 1e+06 -1e+06 -1e+06 -1e+06 1" specular="0.1 0.1 0.1 1" type="Light" visible="1">
        <Object accept_root="1" aspect="1" at="-0.0267898 0.0109282 0.302058" at_dir="0" base_name="Default" far="512" fov="1.0472" from="-0.0250238 0.00810257 0.839187" name_space="__global__" name_suffix="0" near="0.1" orthoSize="100" persistency="666" pickable="0" scale="1 1 1" type="Camera" up="0 1 0" visible="1">
          <attachments>
            <Node base_name="transform" name_space="VRAttachment" name_suffix="0" persistency="666" value=""/>
          </attachments>
          <Object at="0 0 -1" at_dir="0" base_name="Headlight_beacon" from="0 0 0" light="light" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" up="0 1 0" visible="1">
            <attachments>
              <Node base_name="transform" name_space="VRAttachment" name_suffix="0" persistency="666" value=""/>
            </attachments>
            <constraint persistency="666"/>
          </Object>
          <constraint persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Cameras activeCam="Default" persistency="666"/>
  <Rendering deferred_rendering="0" fogColor="0.5 0.5 0.5 1" fogParams="0 0 100 0.1" frustum_culling="1" fxaa="0" hmdd="0" marker="0" occlusion_culling="0" persistency="666" ssao="0" ssao_kernel="4" ssao_noise="4" ssao_radius="0.02" two_sided="1"/>
  <Scripts persistency="666">
    <Script base_name="init" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	if hasattr(VR, 'sprite'): VR.sprite.destroy()
	VR.sprite = VR.Sprite('sprite')
	VR.getRoot().find('light').addChild(VR.sprite)
	VR.sprite.webOpen('http://localhost:5500/naviSite', 512, 1)
	VR.sprite.setFrom([0,0,0])

	leftHand = VR.HandGeo('left')
	leftHand.setLeft()
	VR.getRoot().find('light').addChild(leftHand)

	def test_callback(frame):
	    leftHand.update(frame)
	
	leap_0 = VR.Leap()
	#leap_0.open('172.17.0.2:51000') # docker leap
	leap_0.open('localhost:6437') # local leap
	leap_0.setPose(VR.Pose([0,-1,0], [0,0,1], [0,1,0]))
	leap_0.registerFrameCallback(test_callback)
	
	VR.leaps = []
	VR.leaps.append((leap_0, leftHand))
	
	
</core>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="0" persistency="666"/>
    </Script>
    <Script base_name="navi" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	m = dev.getMessage()
	#dev.answer(dev.getKey(), 'pong')
	
	cam = VR.getRoot().find('Default')
	
	print m
	if m == 'Left': cam.rotate(0.1, [0,1,0])
	if m == 'Right': cam.rotate(-0.1, [0,1,0])
	if m == 'Forward': cam.move(0.1)
	if m == 'Backward': cam.move(-0.1)
</core>
      <trig type="on_device" dev="server1" state="Released" param="" key="-1" base_name="trigger" name_space="__global__" name_suffix="1" persistency="666"/>
    </Script>
    <Script base_name="naviSite" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="HTML">
      <core>
&lt;!DOCTYPE html&gt;
&lt;html&gt;

&lt;head&gt;
 &lt;style type="text/css"&gt;
  body {
		margin:0;
		font-size:200%;
		text-align:center;
		background:#fff0e0;
		color:#ff6622}
  button {
		display:float;
		maring:0;
		padding:0;
		width:50%;
		height:50vh;
		font-size:100%;
		color:#ff6622;}
 &lt;/style&gt;
  &lt;script&gt;
	var websocket = new WebSocket('ws://localhost:5500');
	websocket.onopen = function() { msg('open'); };
	websocket.onerror = function(e) { msg('error'); };
	websocket.onmessage = function(m) { if(m.data) msg('msg: '+m.data); };
	websocket.onclose = function(e) { msg('closed with code '+e.code); };
	
	function send(m){ websocket.send(m); };
	function msg(m){ /*document.getElementById("msg").innerHTML += '&lt;br&gt;' + m;*/ };
 &lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;


&lt;body&gt;
&lt;button onclick="send('Forward')"&gt;Forward&lt;/button&gt;&lt;button onclick="send('Backward')"&gt;Backward&lt;/button&gt;
&lt;button onclick="send('Left')"&gt;Left&lt;/button&gt;&lt;button onclick="send('Right')"&gt;Right&lt;/button&gt;
&lt;div id="msg"&gt;&lt;/div&gt;
&lt;/body&gt;

&lt;/html&gt;
</core>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0.6 0.6 0.6" format=".png" path="" persistency="666" type="0"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
  <Semantics persistency="666"/>
</Scene>
